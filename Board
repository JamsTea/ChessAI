import java.awt.*;

public class Board extends ChessBoardG
{

    Board board = new Board();
    Pawn pawn = new Pawn(0, Color.WHITE, board);


    //Numerical value for each piece. Will be used to help decide whether the piece is the opposition or not
    public final int empty = 0;
    public final int whitePawn = 1;
    public final int whiteKnight =2;
    public final int whiteBishop =3;
    public final int whiteRook = 4;
    public final int whiteQueen = 5;
    public final int whiteKing = 6;
    public final int blackPawn = -1;
    public final int blackKnight =-2;
    public final int blackBishop =-3;
    public final int blackRook = -4;
    public final int blackQueen =-5;
    public final int blackKing =-6;




    private Piece [][] positions; //2D Array called Positions

    public Board() {
        positions = new Piece[8][8];} //Initialised array 8 x 8 (size of chess board)

    public void setPiece (Piece piece, int x, int y){ //Set method for the positions for x and y co-ords
        positions [x][y] = piece;}

    public Piece getPosition (int x , int y){ //Get method to return the position at x and y co-ords
        return positions [x][y];}


    public boolean canTakePiece(int x, int y){ //Boolean function which will return true if the piece attacking is an enemy piece or not
        Piece piece = positions [x][y];
        if (piece == null){
            return false;}

        if (isUserPlayingWhite){
            if(piece.getPosition() == blackPawn || piece.getPosition() == blackKnight || piece.getPosition() ==blackBishop || piece.getPosition() == blackRook
                    || piece.getPosition()==blackQueen || piece.getPosition() == blackKing ){
                return true;}
        }

        if (!isUserPlayingWhite ){
            if(piece.getPosition() == whitePawn || piece.getPosition() == whiteKnight || piece.getPosition() == whiteBishop || piece.getPosition()==whiteRook
                || piece.getPosition()==whiteQueen || piece.getPosition()==whiteKing){
                return true;}
        }
        return false;

    }

}

